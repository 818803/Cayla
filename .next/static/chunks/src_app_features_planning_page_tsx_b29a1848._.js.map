{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/plana/Desktop/test/src/app/features/planning/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { Calendar as CalendarIcon } from 'lucide-react';\nimport { DayPicker } from 'react-day-picker';\nimport 'react-day-picker/dist/style.css';\nimport { Button } from '@/components/ui/button';\n\nexport default function PlanningPage() {\n  const [selectedDay, setSelectedDay] = useState<Date | undefined>(new Date());\n\n  return (\n    <div className=\"w-full h-full p-8 bg-sakura-bg dark:bg-gray-900 overflow-y-auto\">\n      <style>{`\n        .rdp {\n          --rdp-cell-size: 45px;\n          --rdp-caption-font-size: 1.2rem;\n          --rdp-background-color: transparent;\n          --rdp-accent-color: #FF8FAB;\n          --rdp-accent-color-dark: #FF8FAB;\n          --rdp-foreground-color: #5B5052;\n          --rdp-outline: 2px solid var(--rdp-accent-color);\n          --rdp-outline-selected: 3px solid var(--rdp-accent-color);\n          margin: 1em auto;\n        }\n        .dark .rdp {\n           --rdp-foreground-color: #e5e7eb;\n           --rdp-background-color: transparent;\n        }\n        .rdp-button:hover:not([disabled]):not(.rdp-day_selected) {\n            background-color: #FFF5F7;\n        }\n        .dark .rdp-button:hover:not([disabled]):not(.rdp-day_selected) {\n            background-color: rgba(255, 143, 171, 0.1);\n        }\n      `}</style>\n      <div className=\"max-w-2xl mx-auto text-center\">\n        <CalendarIcon className=\"mx-auto h-12 w-12 text-sakura-accent\" />\n        <h1 className=\"mt-4 text-4xl font-bold tracking-tight text-sakura-text dark:text-white sm:text-5xl\">\n          Plan Your Success\n        </h1>\n        <p className=\"mt-6 text-lg leading-8 text-sakura-text/80 dark:text-gray-300\">\n          Select a day to view or add your goals. Stay organized and on top of your tasks.\n        </p>\n\n        <div className=\"mt-12 bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-4 md:p-8 flex flex-col items-center justify-center\">\n            <DayPicker\n              mode=\"single\"\n              selected={selectedDay}\n              onSelect={setSelectedDay}\n              showOutsideDays\n              fixedWeeks\n              className=\"text-sakura-text dark:text-gray-200\"\n            />\n            {selectedDay && (\n              <div className=\"mt-4 text-center\">\n                <p className=\"font-semibold text-lg text-sakura-accent\">\n                  Tasks for: {selectedDay.toLocaleDateString()}\n                </p>\n                <div className=\"mt-4 text-left p-4 bg-sakura-bg dark:bg-gray-700/50 rounded-lg w-full max-w-md\">\n                   {/* Placeholder for tasks */}\n                   <p className=\"text-sm text-sakura-text/70 dark:text-gray-400\">No tasks for this day yet.</p>\n                   <Button size=\"sm\" className=\"mt-4\">Add Task</Button>\n                </div>\n              </div>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;;;AANA;;;;;;AAQe,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB,IAAI;IAErE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;0BAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;MAsBT,CAAC;;;;;;0BACD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,6MAAA,CAAA,WAAY;wBAAC,WAAU;;;;;;kCACxB,6LAAC;wBAAG,WAAU;kCAAsF;;;;;;kCAGpG,6LAAC;wBAAE,WAAU;kCAAgE;;;;;;kCAI7E,6LAAC;wBAAI,WAAU;;0CACX,6LAAC,qKAAA,CAAA,YAAS;gCACR,MAAK;gCACL,UAAU;gCACV,UAAU;gCACV,eAAe;gCACf,UAAU;gCACV,WAAU;;;;;;4BAEX,6BACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAE,WAAU;;4CAA2C;4CAC1C,YAAY,kBAAkB;;;;;;;kDAE5C,6LAAC;wCAAI,WAAU;;0DAEZ,6LAAC;gDAAE,WAAU;0DAAiD;;;;;;0DAC9D,6LAAC,qIAAA,CAAA,SAAM;gDAAC,MAAK;gDAAK,WAAU;0DAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtD;GA9DwB;KAAA","debugId":null}}]
}