{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/plana/Desktop/test/src/app/components/chatinterface.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useEffect } from 'react';\n\ninterface Message {\n  id: string;\n  content: string;\n  isUser: boolean;\n  timestamp: Date;\n}\n\ninterface ChatInterfaceProps {\n  className?: string;\n  onSendMessage?: (message: string) => Promise<string>;\n}\n\nconst ChatInterface: React.FC<ChatInterfaceProps> = ({ \n  className = '', \n  onSendMessage \n}) => {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      content: \"ðŸ‘‹ Hi! I'm your AI assistant. How can I help you today?\",\n      isUser: false,\n      timestamp: new Date()\n    }\n  ]);\n  \n  const [input, setInput] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  \n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n\n  const aiResponses = [\n    \"That's a great question! Let me think about that for a moment.\",\n    \"I understand what you're looking for. Here's what I can tell you about that topic.\",\n    \"Interesting perspective! I'd be happy to help you explore this further.\",\n    \"I see what you mean. Let me provide you with some insights on this.\",\n    \"That's something I can definitely help you with. Here's my take on it.\",\n    \"Good point! I think you'll find this information useful.\",\n    \"I appreciate you asking about this. Let me share what I know.\",\n    \"That's a fascinating topic to discuss. Here are some thoughts I have.\",\n  ];\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, isTyping]);\n\n  const formatTime = (date: Date): string => {\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    const displayHours = hours % 12 || 12;\n    return `${displayHours}:${minutes.toString().padStart(2, '0')} ${ampm}`;\n  };\n\n  const adjustTextareaHeight = () => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = `${Math.min(textareaRef.current.scrollHeight, 120)}px`;\n    }\n  };\n\n  const handleSendMessage = async () => {\n    const trimmedInput = input.trim();\n    if (!trimmedInput || isLoading) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: trimmedInput,\n      isUser: true,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    setIsTyping(true);\n\n    try {\n      let aiResponse: string;\n      \n      if (onSendMessage) {\n        aiResponse = await onSendMessage(trimmedInput);\n      } else {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));\n        aiResponse = aiResponses[Math.floor(Math.random() * aiResponses.length)];\n      }\n\n      const aiMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: aiResponse,\n        isUser: false,\n        timestamp: new Date()\n      };\n\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"I'm sorry, I encountered an error. Please try again.\",\n        isUser: false,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n      setIsTyping(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setInput(e.target.value);\n    adjustTextareaHeight();\n  };\n\n  return (\n    <div className={`flex flex-col h-full max-h-screen ${className}`}>\n      {/* Header */}\n      <div className=\"flex items-center gap-4 px-8 py-6 bg-white/70 backdrop-blur-lg rounded-t-3xl shadow-lg border-b border-white/30\">\n        <div className=\"w-14 h-14 bg-gradient-to-br from-indigo-500 to-purple-500 rounded-full flex items-center justify-center text-3xl shadow-lg\">\n          ðŸ¤–\n        </div>\n        <div>\n          <h3 className=\"text-xl font-bold text-gray-900 dark:text-white\">AI Assistant</h3>\n          <div className=\"flex items-center gap-2 text-sm text-indigo-600 dark:text-indigo-300\">\n            <span className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></span>\n            Online & Ready to Help\n          </div>\n        </div>\n      </div>\n\n      {/* Chat Container */}\n      <div className=\"chat-container flex-1 flex flex-col overflow-y-auto\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex gap-3 items-end ${message.isUser ? 'justify-end' : 'justify-start'}`}\n          >\n            {!message.isUser && (\n              <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-indigo-500 to-purple-500 flex items-center justify-center text-white font-bold shadow\">\n                AI\n              </div>\n            )}\n            <div className={`chat-message ${message.isUser ? 'user' : 'bot'}`}>\n              {message.content}\n              <div className=\"text-xs text-gray-400 mt-1 text-right\">{formatTime(message.timestamp)}</div>\n            </div>\n            {message.isUser && (\n              <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-emerald-400 to-emerald-600 flex items-center justify-center text-white font-bold shadow\">\n                You\n              </div>\n            )}\n          </div>\n        ))}\n\n        {/* Typing Indicator */}\n        {isTyping && (\n          <div className=\"flex gap-3 items-end\">\n            <div className=\"w-10 h-10 rounded-full bg-gradient-to-br from-indigo-500 to-purple-500 flex items-center justify-center text-white font-bold shadow\">\n              AI\n            </div>\n            <div className=\"chat-message bot flex items-center gap-1\">\n              <span className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></span>\n              <span className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></span>\n              <span className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></span>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input */}\n      <div className=\"chat-input-container\">\n        <textarea\n          ref={textareaRef}\n          value={input}\n          onChange={handleInputChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Type your message here...\"\n          disabled={isLoading}\n          className=\"chat-input resize-none\"\n          rows={1}\n        />\n        <button\n          onClick={handleSendMessage}\n          disabled={!input.trim() || isLoading}\n          className=\"chat-submit\"\n        >\n          {isLoading ? (\n            <span className=\"animate-spin inline-block w-5 h-5 border-2 border-white border-t-transparent rounded-full\"></span>\n          ) : (\n            \"Send\"\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///Users/plana/Desktop/test/src/app/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react';\nimport ChatInterface from './components/chatinterface';\nimport { Moon, Sun } from 'lucide-react';\n\nexport default function ChatPage() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  // Load theme preference from localStorage\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    } else {\n      // Check system preference\n      setIsDarkMode(window.matchMedia('(prefers-color-scheme: dark)').matches);\n    }\n  }, []);\n\n  // Apply theme to document\n  useEffect(() => {\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  const handleSendMessage = async (message: string): Promise<string> => {\n    try {\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send message');\n      }\n\n      const data = await response.json();\n      return data.reply || \"I'm sorry, I didn't understand that.\";\n    } catch (error) {\n      console.error('Error:', error);\n      return \"I'm experiencing some technical difficulties. Please try again.\";\n    }\n  };\n\n  return (\n    <div className={`min-h-screen transition-all duration-300 ${\n      isDarkMode \n        ? 'bg-gradient-to-br from-gray-900 via-slate-800 to-gray-900' \n        : 'bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50'\n    }`}>\n      {/* Header with theme toggle */}\n      <div className=\"relative z-10 p-6\">\n        <div className=\"max-w-4xl mx-auto flex justify-between items-center\">\n          <div>\n            <h1 className={`text-3xl font-bold ${\n              isDarkMode ? 'text-white' : 'text-gray-800'\n            }`}>\n              AI Assistant\n            </h1>\n            <p className={`text-lg mt-2 ${\n              isDarkMode ? 'text-gray-300' : 'text-gray-600'\n            }`}>\n              Online & Ready to Help\n            </p>\n          </div>\n          \n          {/* Theme Toggle Button */}\n          <button\n            onClick={toggleTheme}\n            className={`p-3 rounded-full transition-all duration-200 hover:scale-110 ${\n              isDarkMode \n                ? 'bg-gray-700 hover:bg-gray-600 text-yellow-400' \n                : 'bg-white hover:bg-gray-50 text-gray-700 shadow-lg'\n            }`}\n            aria-label=\"Toggle theme\"\n          >\n            {isDarkMode ? <Sun size={20} /> : <Moon size={20} />}\n          </button>\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"flex items-center justify-center px-6 pb-6\">\n        <div className={`w-full max-w-4xl h-[75vh] rounded-2xl shadow-2xl overflow-hidden ${\n          isDarkMode \n            ? 'bg-gray-800/50 border border-gray-700/50 backdrop-blur-sm' \n            : 'bg-white/80 border border-white/20 backdrop-blur-sm'\n        }`}>\n          <ChatInterface \n            onSendMessage={handleSendMessage}\n            className=\"w-full h-full\"\n            isDarkMode={isDarkMode}\n          />\n        </div>\n      </div>\n\n      {/* Decorative elements */}\n      <div className=\"fixed inset-0 pointer-events-none overflow-hidden\">\n        <div className={`absolute top-1/4 -left-4 w-72 h-72 rounded-full opacity-20 blur-3xl ${\n          isDarkMode ? 'bg-purple-500' : 'bg-blue-400'\n        }`}></div>\n        <div className={`absolute bottom-1/4 -right-4 w-72 h-72 rounded-full opacity-20 blur-3xl ${\n          isDarkMode ? 'bg-blue-500' : 'bg-purple-400'\n        }`}></div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;;;;;;AAHA;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,cAAc,eAAe;QAC/B,OAAO;YACL,0BAA0B;YAC1B,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO;QACzE;IACF,GAAG,EAAE;IAEL,0BAA0B;IAC1B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY;YACd,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YACvC,aAAa,OAAO,CAAC,SAAS;QAChC,OAAO;YACL,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;YAC1C,aAAa,OAAO,CAAC,SAAS;QAChC;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,cAAc;QAClB,cAAc,CAAC;IACjB;IAEA,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,aAAa;gBACxC,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAQ;YACjC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,OAAO,KAAK,KAAK,IAAI;QACvB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,UAAU;YACxB,OAAO;QACT;IACF;IAEA,qBACE,8OAAC;QAAI,WAAW,CAAC,yCAAyC,EACxD,aACI,8DACA,6DACJ;;0BAEA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;;8CACC,8OAAC;oCAAG,WAAW,CAAC,mBAAmB,EACjC,aAAa,eAAe,iBAC5B;8CAAE;;;;;;8CAGJ,8OAAC;oCAAE,WAAW,CAAC,aAAa,EAC1B,aAAa,kBAAkB,iBAC/B;8CAAE;;;;;;;;;;;;sCAMN,8OAAC;4BACC,SAAS;4BACT,WAAW,CAAC,6DAA6D,EACvE,aACI,kDACA,qDACJ;4BACF,cAAW;sCAEV,2BAAa,8OAAC;gCAAI,MAAM;;;;;qDAAS,8OAAC;gCAAK,MAAM;;;;;;;;;;;;;;;;;;;;;;0BAMpD,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAW,CAAC,iEAAiE,EAChF,aACI,8DACA,uDACJ;8BACA,cAAA,8OAAC,0IAAA,CAAA,UAAa;wBACZ,eAAe;wBACf,WAAU;wBACV,YAAY;;;;;;;;;;;;;;;;0BAMlB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAW,CAAC,oEAAoE,EACnF,aAAa,kBAAkB,eAC/B;;;;;;kCACF,8OAAC;wBAAI,WAAW,CAAC,wEAAwE,EACvF,aAAa,gBAAgB,iBAC7B;;;;;;;;;;;;;;;;;;AAIV","debugId":null}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":["file:///Users/plana/Desktop/test/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAczC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1C,IAAIP,QAAQC,GAAG,CAACO,SAAS,eAAE;gBACzBL,OAAOC,OAAO,GAAGC,QAAQ;YAC3B,OAAO;;YAEP;QACF,OAAO;;QAMP;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///Users/plana/Desktop/test/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 567, "column": 0}, "map": {"version":3,"sources":["file:///Users/plana/Desktop/test/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}